#ifndef LUT_MOD3_H
#define LUT_MOD3_H
#include <stdint.h>

// Access method: LORE_LUT_SPARSE_MOD3[x + 160]
static const int16_t LORE_LUT_SPARSE_MOD3[321] = {
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1
};

// Access method: LORE_LUT_DECOMPOSE_MOD3[x + 1]
static const int16_t LORE_LUT_DECOMPOSE_MOD3[3] = {
  -1,   0,   1
};

// Access method: LORE_LUT_U8_NOISE_MOD3[x + 0]
static const int16_t LORE_LUT_U8_NOISE_MOD3[256] = {
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,  -1,   0,   1,
  -1,   0,   1,  -1
};

#endif // LUT_MOD3_H